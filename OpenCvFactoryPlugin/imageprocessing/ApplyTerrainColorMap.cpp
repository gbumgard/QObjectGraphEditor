#include "ApplyTerrainColorMap.h"
#include "OpenCvFactoryPlugin.h"

REGISTER_CLASS(ApplyTerrainColorMap)

#include <opencv2/core.hpp>
#include <opencv2/imgproc.hpp>

static const uint8_t lut[256][3] = {
  {255,255,255},
  {252,252,253},
  {249,249,251},
  {246,247,249},
  {244,244,247},
  {241,242,244},
  {238,239,243},
  {236,237,241},
  {233,234,239},
  {230,231,237},
  {228,229,235},
  {225,226,232},
  {222,224,231},
  {220,221,228},
  {217,219,227},
  {214,216,225},
  {212,214,223},
  {209,211,221},
  {206,208,219},
  {204,206,217},
  {201,203,215},
  {198,201,212},
  {196,198,211},
  {193,196,209},
  {190,193,207},
  {187,191,205},
  {185,188,203},
  {182,185,200},
  {179,183,199},
  {177,180,196},
  {174,178,195},
  {171,175,193},
  {169,173,191},
  {166,170,189},
  {163,167,187},
  {161,165,185},
  {158,162,183},
  {155,160,181},
  {153,157,179},
  {150,155,177},
  {147,152,175},
  {145,150,173},
  {142,147,171},
  {139,144,168},
  {137,142,167},
  {134,139,165},
  {131,137,163},
  {129,134,161},
  {126,132,159},
  {123,129,157},
  {121,127,155},
  {118,124,153},
  {115,121,151},
  {112,119,149},
  {110,116,147},
  {107,114,145},
  {104,111,143},
  {102,109,141},
  {99,106,139},
  {96,103,136},
  {94,101,135},
  {91,98,133},
  {88,96,131},
  {86,93,129},
  {84,92,128},
  {85,95,130},
  {86,97,131},
  {87,100,134},
  {88,102,136},
  {89,105,138},
  {90,107,140},
  {91,110,142},
  {93,112,144},
  {94,115,146},
  {95,118,147},
  {96,120,150},
  {97,123,152},
  {98,125,154},
  {99,128,156},
  {100,130,158},
  {101,133,160},
  {102,135,162},
  {103,138,163},
  {104,141,166},
  {106,143,168},
  {107,146,170},
  {108,148,172},
  {109,151,174},
  {110,153,176},
  {111,156,178},
  {112,159,179},
  {113,161,182},
  {114,164,184},
  {115,166,186},
  {116,169,188},
  {117,171,190},
  {118,174,192},
  {120,176,194},
  {121,179,195},
  {122,182,198},
  {123,184,200},
  {124,187,202},
  {125,189,204},
  {126,192,206},
  {127,194,208},
  {128,197,210},
  {129,199,211},
  {130,202,214},
  {131,205,216},
  {133,207,218},
  {134,210,220},
  {135,212,222},
  {136,215,224},
  {137,217,226},
  {138,220,228},
  {139,223,230},
  {140,225,232},
  {141,228,234},
  {142,230,236},
  {143,233,238},
  {144,235,240},
  {145,238,242},
  {147,240,244},
  {148,243,246},
  {149,246,248},
  {150,248,250},
  {151,251,252},
  {152,253,254},
  {152,254,253},
  {151,253,249},
  {151,253,245},
  {150,252,241},
  {149,251,237},
  {148,250,232},
  {147,249,229},
  {147,249,225},
  {146,248,221},
  {145,247,217},
  {144,246,213},
  {143,245,209},
  {143,245,205},
  {142,244,200},
  {141,243,197},
  {140,242,193},
  {139,241,189},
  {139,241,185},
  {138,240,181},
  {137,239,177},
  {136,238,173},
  {135,237,168},
  {135,237,165},
  {134,236,161},
  {133,235,157},
  {132,234,153},
  {131,233,149},
  {131,233,145},
  {130,232,141},
  {129,231,136},
  {128,230,133},
  {127,229,129},
  {127,229,125},
  {126,228,121},
  {125,227,117},
  {124,226,113},
  {123,225,109},
  {122,225,104},
  {122,224,101},
  {121,223,97},
  {120,222,93},
  {119,221,89},
  {119,221,85},
  {118,220,81},
  {117,219,77},
  {116,218,72},
  {115,217,69},
  {115,217,65},
  {114,216,61},
  {113,215,57},
  {112,214,53},
  {111,213,49},
  {111,213,45},
  {110,212,40},
  {109,211,37},
  {108,210,33},
  {107,209,29},
  {107,209,25},
  {106,208,21},
  {105,207,17},
  {104,206,13},
  {103,205,8},
  {103,205,5},
  {102,204,1},
  {106,202,0},
  {112,200,0},
  {118,198,0},
  {124,196,0},
  {130,194,0},
  {136,192,0},
  {142,190,0},
  {148,188,0},
  {154,186,0},
  {160,184,0},
  {166,182,0},
  {172,180,0},
  {178,178,0},
  {184,176,0},
  {190,174,0},
  {196,172,0},
  {202,170,0},
  {208,168,0},
  {214,166,0},
  {220,164,0},
  {226,162,0},
  {232,160,0},
  {238,158,0},
  {244,156,0},
  {250,154,0},
  {254,152,0},
  {251,149,1},
  {249,147,3},
  {246,144,4},
  {243,141,5},
  {241,138,7},
  {238,136,8},
  {235,133,9},
  {233,131,11},
  {230,128,12},
  {227,125,13},
  {225,123,14},
  {222,120,16},
  {219,117,17},
  {217,115,19},
  {214,112,20},
  {211,109,21},
  {209,107,23},
  {206,104,24},
  {203,101,25},
  {201,98,27},
  {198,96,28},
  {195,93,29},
  {193,91,31},
  {190,88,32},
  {187,85,33},
  {185,83,35},
  {182,80,36},
  {179,77,37},
  {177,75,39},
  {174,72,40},
  {171,69,41},
  {169,67,43},
  {166,64,44},
  {163,61,45},
  {161,59,47},
  {158,56,48},
  {155,53,49},
  {153,51,51},
};



static const cv::Mat makeLut() {
  static const cv::Mat lutMat(1, 256, CV_8UC3, (uint8_t*)lut);
  return lutMat;
}

static const cv::Mat makeFlippedLut() {
  cv::Mat dst;
  cv::flip(makeLut(),dst,1);
  return dst;
}

static const cv::Mat& getLut(bool flipped) {

  static const cv::Mat _lut = makeLut();
  static const cv::Mat _flippedLut = makeFlippedLut();

  if (flipped) {
    return _flippedLut;
  }
  else {
    return _lut;
  }
}

ApplyTerrainColorMap::ApplyTerrainColorMap(QObject* parent)
  : QObject(parent)
  , _flip(false)
{
}

void ApplyTerrainColorMap::flip(bool enable) {
  _flip = enable;
}

void ApplyTerrainColorMap::in(const cv::Mat &mat) {
  cv::Mat mat8U;
  if (mat.depth() != CV_8U) {
    mat.convertTo(mat8U,CV_8U);
  }
  else {
    mat8U = mat;
  }
  cv::Mat mat8UC3;
  cv::cvtColor(mat8U,mat8UC3,CV_GRAY2BGR);
  cv::Mat dst;
  cv::LUT(mat8UC3,getLut(_flip),dst);
  emit out(dst);
}
